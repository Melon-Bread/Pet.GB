{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_spr",
				"_sprEgg\tflixel.FlxSprite"
			],
			[
				"_sp",
				"_sprEgg\tflixel.FlxSprite"
			],
			[
				"be",
				"beAshamed(  )\tVoid"
			],
			[
				"_sn",
				"_sndAshamed\tflixel.system.FlxSound"
			],
			[
				"fin",
				"finished\tBool"
			],
			[
				"re",
				"resumeMood"
			],
			[
				"che",
				"checkMood(  )\tVoid"
			],
			[
				"pl",
				"playing\tBool"
			],
			[
				"th",
				"thought\tString"
			],
			[
				"Cur",
				"CurrentMood\tMood"
			],
			[
				"pla",
				"play(...)\tflixel.system.FlxSound"
			],
			[
				"_snd",
				"_sndThought\tflixel.system.FlxSound"
			],
			[
				"show",
				"showThought( thought : String )\tVoid"
			],
			[
				"_sprT",
				"_sprThoughts\tflixel.FlxSprite"
			],
			[
				"_ge",
				"_gel"
			],
			[
				"_tx",
				"_txtTime"
			],
			[
				"_txt",
				"_txtDIS\tflixel.text.FlxText"
			],
			[
				"int",
				"Interact__png\tString"
			],
			[
				"_sprIn",
				"_sprInteraction\tflixel.FlxSprite"
			],
			[
				"_c",
				"_clock\tClock"
			],
			[
				"ge",
				"GelPet"
			],
			[
				"menuOp",
				"_menuOption\tInt"
			],
			[
				"Men",
				"MenuDirection\tclass"
			],
			[
				"MenuDIr",
				"MenuDirection\tclass"
			],
			[
				"ac",
				"active\tBool"
			],
			[
				"inf",
				"_infoMenu\tInfoMenu"
			],
			[
				"_info",
				"_menuInfo\tInfoMenu"
			],
			[
				"me",
				"Menu__png\tString"
			],
			[
				"draw",
				"drawFrame( ?Force : Bool )\tVoid"
			],
			[
				"up",
				"updateAlpha( Value : Float )\tVoid"
			],
			[
				"FlxT",
				"FlxTween\tclass"
			],
			[
				"e",
				"exists\tBool"
			],
			[
				"_men",
				"_menuInfo"
			],
			[
				"Menu",
				"InfoMenu\tclass"
			],
			[
				"_",
				"_txtTitle"
			],
			[
				"E",
				"EarlyGameBoy__ttf\tString"
			],
			[
				"FlxTw",
				"FlxTween\tclass"
			],
			[
				"any",
				"anyPressed(...)\tBool"
			],
			[
				"Fl",
				"FlxG\tclass"
			],
			[
				"a",
				"animation\tflixel.animation.FlxAnimationController"
			],
			[
				"an",
				"animation\tflixel.animation.FlxAnimationController"
			],
			[
				"As",
				"_isAsleep\tBool"
			],
			[
				"Cu",
				"CurrentMood\tMood"
			],
			[
				"_is",
				"_isTired\tBool"
			],
			[
				"Sl",
				"Sleepiness\tInt"
			],
			[
				"check",
				"checkRange(  )\tVoid"
			],
			[
				"is",
				"_isAsleep\tBool"
			],
			[
				"S",
				"SLEEPING\tMood"
			],
			[
				"CU",
				"CurrentMood\tMood"
			],
			[
				"_isa",
				"_isAsleep\tBool"
			],
			[
				"Sle",
				"Sleep(  )\tVoid"
			],
			[
				"ite",
				"itemJoin( ?letter : String )\tVoid"
			],
			[
				"In",
				"Intellect"
			],
			[
				"Int",
				"Intellect\tInt"
			],
			[
				"_has",
				"_hasStudied\tBool"
			],
			[
				"_made",
				"_madeWaste"
			],
			[
				"waste",
				"_wasteReady\tBool"
			],
			[
				"_waste",
				"_madeWaste\tBool"
			],
			[
				"fade",
				"fadeOut(...)\tflixel.FlxSprite"
			],
			[
				"el",
				"elapsed"
			],
			[
				"isT",
				"_isTired\tBool"
			],
			[
				"SLEEP",
				"SLEEPY\tNeed"
			],
			[
				"_spor",
				"_sprThoughts\tflixel.FlxSprite"
			],
			[
				"Cure",
				"CurrentNeed\tNeed"
			],
			[
				"Th",
				"Thoughts__png\tString"
			],
			[
				"W",
				"Wait"
			],
			[
				"Flx",
				"FlxG\tflixel"
			],
			[
				"it",
				"itemLeave\tfunction"
			],
			[
				"fa",
				"fadeOut"
			],
			[
				"tr",
				"true"
			],
			[
				"FlxC",
				"FlxColor\tflixel.util"
			],
			[
				"_in",
				"_sprInteraction\tvar"
			],
			[
				"_s",
				"_sprInteraction"
			],
			[
				"_sprin",
				"_sprInteraction\tvar"
			],
			[
				"Max",
				"MAX_LEVEL\tInt"
			],
			[
				"Ma",
				"MAX_LEVEL\tInt"
			],
			[
				"menu",
				"_menuOption\tInt"
			],
			[
				"_st",
				"_statDiscipline"
			],
			[
				"Con",
				"Config__png\tString"
			],
			[
				"_m",
				"_menuOption\tInt"
			],
			[
				"_spS",
				"_sprSelect\tvar"
			],
			[
				"men",
				"_menuOption"
			],
			[
				"tmp",
				"tmpSelect__png\tString"
			],
			[
				"_sprS",
				"_sprSelect\tflixel.FlxSprite"
			],
			[
				"snd",
				"_sndNext\tvar"
			],
			[
				"se",
				"_sndSelect"
			],
			[
				"_sprC",
				"_sprConfig\tflixel.FlxSprite"
			],
			[
				"_Ch",
				"_sprCheer\tflixel.FlxSprite"
			],
			[
				"sp",
				"_sprRest"
			],
			[
				"FlxS",
				"FlxSprite\tflixel"
			],
			[
				"From",
				"fromRGB(...)\tflixel.util.FlxColor"
			],
			[
				"he",
				"height\tFloat"
			],
			[
				"HU",
				"HUD_Background__png\tString"
			],
			[
				"H",
				"HUD_Background__png\tString"
			],
			[
				"from",
				"fromRGB(...)\tflixel.util.FlxColor"
			],
			[
				"scr",
				"screenCenter(...)\tflixel.FlxObject"
			],
			[
				"bg",
				"set_bgColor(...)\tflixel.util.FlxColor"
			],
			[
				"p",
				"player__png\tString"
			],
			[
				"_t",
				"_txtHealth\tflixel.text.FlxText"
			],
			[
				"spr",
				"_sprHealth"
			],
			[
				"FLx",
				"FlxColor\tclass"
			],
			[
				"forE",
				"forEachAlive(...)\tUnknown<1>"
			],
			[
				"grp",
				"_grpEnemies"
			],
			[
				"moveTowa",
				"moveTowardsPoint(...)\tVoid"
			],
			[
				"idle",
				"_idleTimer\tFloat"
			],
			[
				"Init",
				"InitState\tNull<Void -> Void>"
			],
			[
				"enti",
				"enity"
			],
			[
				"en",
				"enemy"
			],
			[
				"par",
				"parseInt( x : String )\tNull<Int>"
			],
			[
				"_grp",
				"_grpEnemies\tflixel.group.FlxTypedGroup<Enemy>"
			],
			[
				"En",
				"Enemy\tclass"
			],
			[
				"FlxTyped",
				"FlxTypedGroup\tflixel.group.FlxGroup"
			],
			[
				"c",
				"coin__png\tString"
			],
			[
				"fun",
				"Function\tflash.utils"
			],
			[
				"foll",
				"follow(...)\tVoid"
			],
			[
				"co",
				"clolide"
			],
			[
				"entit",
				"entityName"
			],
			[
				"setTile",
				"setTileProperties(...)\tVoid"
			],
			[
				"tile",
				"tiles__png\tString"
			],
			[
				"add",
				"addons\tpackage"
			],
			[
				"FlxTil",
				"FlxTilemap\tflixel.tile"
			],
			[
				"F",
				"FlxObject\tclass"
			],
			[
				"move",
				"movement(  )\tVoid"
			],
			[
				"ro",
				"rotate(...)\tflixel.math.FlxPoint"
			],
			[
				"flix",
				"flixel\tpackage"
			],
			[
				"ass",
				"assets"
			],
			[
				"l",
				"listdir"
			],
			[
				"in",
				"input"
			]
		]
	},
	"buffers":
	[
		{
			"file": "source/PlayState.hx",
			"settings":
			{
				"buffer_size": 2117,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/MenuState.hx",
			"settings":
			{
				"buffer_size": 1967,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/HUD.hx",
			"settings":
			{
				"buffer_size": 10975,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Gel.hx",
			"settings":
			{
				"buffer_size": 7875,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Main.hx",
			"settings":
			{
				"buffer_size": 686,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 357.0,
		"last_filter": "TOD",
		"selected_items":
		[
			[
				"TOD",
				"TodoReview: Open Files"
			],
			[
				"i",
				"Haxe: Organize Imports"
			],
			[
				"to",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"im",
				"Haxe: Organize Imports"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"mark",
				"Markdown Preview: Export HTML in Sublime Text"
			],
			[
				"ma",
				"Markdown Preview: Copy to Clipboard"
			],
			[
				"Todo",
				"TodoReview: Open Files"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"comm",
				"Git: Quick Commit"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"git pu",
				"Git: Push Current Branch"
			],
			[
				"git a",
				"Git: Quick Add"
			],
			[
				"imp",
				"Haxe: Organize Imports"
			],
			[
				"git",
				"Git: Init"
			],
			[
				"im\t",
				"Haxe: Organize Imports"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"impo",
				"Haxe: Organize Imports"
			],
			[
				"import",
				"Haxe: Organize Imports"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"new",
				"Haxe: New Class"
			],
			[
				"theme",
				"Boxy Theme: Activation"
			],
			[
				"hexe",
				"Haxe: Organize Imports"
			],
			[
				"haxe",
				"Haxe: Restart Server"
			],
			[
				"Haxe",
				"Haxe: New Class"
			],
			[
				"instak",
				"Package Control: Install Package"
			],
			[
				"r",
				"Haxe: Run build"
			],
			[
				"buil",
				"Haxe: Run build"
			],
			[
				"run ",
				"Haxe: Run build"
			],
			[
				"build",
				"Haxe: Run build"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 446.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/melon/Documents/Projects/Pet.GB",
		"/C/Users/melon/Documents/Projects/Pet.GB/assets",
		"/C/Users/melon/Documents/Projects/Pet.GB/source"
	],
	"file_history":
	[
		"/C/Users/melon/Documents/Projects/Pet.GB/source/InfoMenu.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/source/Clock.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/source/PlayState.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/source/Main.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/source/MenuState.hx",
		"/c/haxetoolkit/haxe/lib/flixel/4,1,1/flixel/FlxBasic.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/Project.xml",
		"/C/Users/melon/Documents/Projects/Pet.GB/GelNotes.md",
		"/C/Users/melon/Documents/Projects/Pet.GB/source/Gel.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/_tmp/GelNotes.html",
		"/C/Users/melon/Documents/Projects/Pet.GB/_tmp/MoodNotes.md",
		"/C/HaxeToolkit/haxe/lib/flixel/4,1,1/flixel/text/FlxBitmapText.hx",
		"/C/Users/melon/AppData/Roaming/Sublime Text 3/Packages/TodoReview/TodoReview.sublime-settings",
		"/C/HaxeToolkit/haxe/lib/flixel/4,1,1/flixel/util/FlxSpriteUtil.hx",
		"/C/Users/melon/Documents/Projects/Pet.GB/.gitignore",
		"/C/Users/melon/Documents/Projects/PetGB/source/Main.hx",
		"/C/Users/melon/Documents/Projects/PetGB/Project.xml",
		"/C/Users/melon/Documents/Projects/PetGB/source/MenuState.hx",
		"/C/HaxeToolkit/haxe/lib/flixel/4,1,1/include.xml",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/source/Enemy.hx",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/source/FSM.hx",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/source/Player.hx",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/source/Coin.hx",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/source/Player2.hx",
		"/C/Users/melon/Documents/HaxeFixel_Projects/FlixelTut/Project.xml",
		"/C/HaxeToolkit/haxe/lib/flixel/4,1,1/flixel/FlxSubState.hx",
		"/C/HaxeToolkit/haxe/lib/flixel/4,1,1/flixel/FlxGame.hx",
		"/C/Users/melon/AppData/Roaming/Sublime Text 3/Packages/Haxe/Support/Default.sublime-keymap",
		"/C/Users/melon/Downloads/HelloWorld/source/MenuState.hx",
		"/C/Users/melon/Downloads/VITO/New folder (3)/theme.txt",
		"/C/Users/melon/AppData/Roaming/BetterDiscord/themes/Shiratsuyu-Class.theme.css",
		"/C/Users/melon/AppData/Roaming/BetterDiscord/plugins/Bunny.plugin.js",
		"/C/Users/melon/AppData/Roaming/BetterDiscord/themes/BunniesMcGee.theme.css",
		"/C/Users/melon/AppData/Roaming/BetterDiscord/themes/Discord Rounded Glass_zaku.theme.css",
		"/C/Users/melon/_vimrc",
		"/C/Users/melon/AppData/Roaming/BetterDiscord/themes/Discord Rounded Glass.theme.css",
		"/C/Users/melon/Downloads/SFV Unlocker/readme.txt",
		"/C/Users/melon/Downloads/StreetFighterV+15Tr-LNG/StreetFighterV+15Tr-LNG_v1.07 - INFO.txt",
		"/C/Users/melon/Downloads/StreetFighterV+15Tr-LNG/VERY IMPORTANT!.txt",
		"/C/Users/melon/Downloads/curl.cmd",
		"/C/Users/melon/AppData/Local/nvim/init.vim",
		"/E/Games/PS3/Tools/psnstuff/fixes/BLAZBLUE_CHREXTEND_NPUB31634_FIX101_421/links.txt",
		"/C/Users/melon/Downloads/PS3/DLC/update.txt",
		"/C/Users/melon/Programs/RetroArch-x86_64-Windows/retroarch.cfg",
		"/E/Games/PS3/Tools/psx_classics/Instructions.txt",
		"/C/Users/melon/Programs/RetroArch-x86_64-Windows/autoconfig/usb gamepad           .cfg",
		"/C/Users/melon/AppData/Local/Temp/7zO48AE261A/FUGAZI NFO.txt",
		"/E/Games/PS3/Tools/psx_classics/PS1 Classics PSN Work Folder/PARAM.SFO",
		"/E/Games/PS3/Tools/psx_classics/PS1 Classics ICON0 PICS/readme.txt",
		"/E/Games/PS3/Tools/psx_classics/sign.py",
		"/C/Users/melon/Downloads/something.reg",
		"/C/Users/melon/Downloads/PS3/boot_plugins.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO0AA6D4CB/INSTALLATION.md",
		"/C/Users/melon/Downloads/PS3/ps3xpad_0.8/plugins/ps3xpad/xpad_devices.txt",
		"/C/Users/melon/Downloads/PS3/ps3xpad_0.8/plugins/ps3xpad/xpad_settings.txt",
		"/C/Users/melon/Downloads/PS3/ps3xpad_0.8/plugins/ps3xpad/xpad_remap.txt",
		"/C/Users/melon/AppData/Local/Temp/7zOCBDFDF6B/4.80.1_D-REX_Link.txt",
		"/C/Users/melon/AppData/Local/Temp/7zOC4E2DADF/readme.txt",
		"/C/Users/melon/Downloads/VITO/game.txt",
		"/C/Users/melon/Downloads/VITO/New folder/rinCheat/README.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO423F271E/4.80.1_REX_Link.txt",
		"/H/boot_config.ini",
		"/H/luma/locales/000400000017EA00.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO4B221BCA/game.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO4075BA46/ReadMe.txt",
		"/C/Users/melon/Downloads/2016-09-06_RetroArch/tmp/nxengine/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/Discord_Reborn.theme.css",
		"/H/luma/update.cfg",
		"/C/Users/melon/Downloads/VITO/vita_games.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO89AD9F18/README.txt",
		"/C/Users/melon/Downloads/VITO/g/game.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO8452D42A/boot_config.ini",
		"/C/msys64/usr/local/vitasdk/arm-vita-eabi/include/psp2/io/fcntl.h",
		"/C/Users/melon/Documents/Projects/c-test/C-Test/hello_vita/hello_vita.mk",
		"/C/msys64/usr/local/vitasdk/arm-vita-eabi/include/psp2/display.h",
		"/C/Users/melon/Documents/Projects/c-test/C-Test/hello_vita/hello_vita.project",
		"/C/Users/melon/Documents/Projects/c-test/C-Test/hello_vita/main.c",
		"/C/Users/melon/Documents/Projects/c-test/C-Test/cmake-build-Debug/Makefile",
		"/C/Users/melon/Documents/Projects/c-test/C-Test/CMakeLists.txt",
		"/C/Users/melon/Documents/ClionProjects/untitled/main.c",
		"/C/Users/melon/AppData/Local/Temp/7zO4F346A3E/README.md",
		"/C/Users/melon/AppData/Local/Temp/7zO09B07ECB/readme.txt",
		"/C/Users/melon/Downloads/VITO/vitashell-themes-master/themes/monokuma/colors.txt",
		"/C/Users/melon/Downloads/VITO/colors.txt",
		"/C/Program Files (x86)/Steam/steamapps/common/Disgaea PC/pad.cfg",
		"/C/Users/melon/Documents/GitHub/RetroArch_Icons_Vita/build.py",
		"/C/Users/melon/Downloads/VITO/vitashell-themes-master/themes/MinimalistShell-Syz/colors.txt",
		"/C/Users/melon/Downloads/VITO/VitaShell/theme/theme.txt",
		"/C/Users/melon/AppData/Local/Temp/7zO4519F3A0/theme.txt",
		"/C/Users/melon/Documents/GitHub/EagleJab/EagleJab.py",
		"/E/Games/VITA/Games/README.txt",
		"/C/Users/melon/Documents/GitHub/RetroArch_Icons_Vita/cores/mupen64plus/livearea/contents/template.xml",
		"/C/msys64/home/melon/Git/ebootSegs/main.c",
		"/C/Users/melon/Documents/GitHub/RetroArch_Icons_Vita/cores/yabause/livearea/contents/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/tmp/nxengine_libretro/sce_sys/livearea/contents/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/tmp/nxengine_libretro/livearea/contents/template.xml",
		"/C/Users/melon/AppData/Local/Temp/7zO46954437/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/tmp/sce_sys/livearea/contents/template.xml",
		"/C/msys64/home/melon/Git/VitaTester/main.c",
		"/C/Users/melon/Desktop/PS3_Files_Used_By_Versatile/4 - Downgrader/Download Links.txt",
		"/C/Users/melon/Desktop/PS3_Files_Used_By_Versatile/2 - Verify and Dump Patching Tools/E3 Flasher Error Codes.txt",
		"/C/msys64/home/melon/.bashrc",
		"/C/msys64/home/melon/Git/VitaTester/Makefile",
		"/C/msys64/home/melon/.profile",
		"/C/msys64/home/melon/Git/vdpm-master/config.travis",
		"/C/msys64/home/melon/Git/vdpm-master/_work/freetype-2.6.5/CMakeLists.txt",
		"/C/msys64/home/melon/Git/vdpm-master/pkg/freetype-2.6.5",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/fbalpha2012/livearea/contents/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/2048/livearea/contents/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/dosbox/livearea/contents/template.xml",
		"/C/msys64/home/melon/Git/vdpm-toolchain-deps/config.travis",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/gambatte/livearea/contents/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/tyrquake/livearea/contents/template.xml",
		"/C/msys64/home/melon/Git/vdpm-toolchain-deps/config.sample",
		"/C/Users/melon/Downloads/HENkaku/Icons and Live Area Images (HENkaku)/RETR00003/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/2016-08-03_RetroArch/template.xml",
		"/C/Users/melon/AppData/Local/Temp/7zO0186D34C/template.xml",
		"/C/Users/melon/Desktop/RA_HENkaku_Icons/cores/desmume/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/HENkaku/Icons and Live Area Images (HENkaku)/RETR00007/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/HENkaku/Icons and Live Area Images (HENkaku) (1)/FRAN00001 - SMS+/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/HENkaku/Icons and Live Area Images (HENkaku)/RETR00010/livearea/contents/template.xml",
		"/C/Users/melon/Downloads/HENkaku/Icons and Live Area Images (HENkaku) (1)/SNES LIVEAREA SQL.txt",
		"/C/Users/melon/Downloads/HENkaku/samples-master/hello_world/Makefile",
		"/C/Users/melon/Downloads/HENkaku/samples-master/hello_cpp_world/Makefile",
		"/C/Users/melon/Downloads/HENkaku/samples-master/hello_world/main.c",
		"/C/msys64/msys2_shell.cmd",
		"/C/Users/melon/AppData/Local/Temp/7zO8E3FA4B2/Readme.txt",
		"/C/Users/melon/Downloads/vpk-tmp/MGBA00001/sce_sys/livearea/contents/template.xml"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TODO",
			"_wasteReady",
			"POOPY",
			"_wasteReady",
			"_tmpText",
			".play",
			"INT",
			"_menuINfo",
			"active",
			"isAsleep",
			"Mood.Sleep",
			"_isAsleeps",
			"madwa",
			"elsapsed",
			"/l6",
			"/16",
			"body",
			"train",
			"stat",
			"_sprGel",
			"Choice",
			"positive",
			"Learn",
			"Praise",
			"Clean",
			"Teach",
			"_txtSleep",
			"_txtStats",
			"Moneny",
			"_idleTmr",
			"_idleTime",
			"Chapter ",
			"background",
			"workbench",
			"retrospers",
			"PROJECT",
			"scr",
			"full",
			"entry",
			"tile",
			"zelda",
			"tile",
			"chee",
			"cheevos",
			"inpu",
			"Super",
			"FalconPunch",
			"listings",
			"Connector"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"HAP",
			"_infoMenu",
			"_isAsleep",
			"elapsed",
			"",
			"Study",
			"",
			"_gelPet",
			"Option",
			"increment",
			"Train",
			"Cheer",
			"Wipe",
			"Learn",
			"_txtRest",
			"_txtInfo",
			"Money",
			"_idleTimer",
			"CH",
			"TARGET",
			"EagleJab"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/PlayState.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2117,
						"regions":
						{
						},
						"selection":
						[
							[
								1171,
								1171
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1170,
										1171
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										378,
										379
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/MenuState.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1967,
						"regions":
						{
						},
						"selection":
						[
							[
								1053,
								1053
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1060,
										1061
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1031,
										1032
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 38.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/HUD.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10975,
						"regions":
						{
						},
						"selection":
						[
							[
								7417,
								7369
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7830,
										7831
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										6150,
										6151
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1890.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/Gel.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7875,
						"regions":
						{
						},
						"selection":
						[
							[
								1566,
								1566
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1566,
										1567
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1543,
										1544
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "source/Main.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 686,
						"regions":
						{
						},
						"selection":
						[
							[
								284,
								284
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										684,
										685
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										138,
										139
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 107.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 118.0
	},
	"pinned_build_system": "Packages/Python 3/Python3.sublime-build",
	"project": "PetGB.sublime-project",
	"replace":
	{
		"height": 90.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
